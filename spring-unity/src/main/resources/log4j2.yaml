# 共有8个级别，按照从低到高为：ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF。
# intLevel值依次为0,100,200,300,400,500,600,700
# intLevel值越小，级别越高
Configuration:
  #日志框架本身的输出日志级别
  status: warn
  name: YAMLConfigTest
  #自动加载配置文件的间隔时间，不低于5秒
  monitorInterval: 30
  properties: #定义全局变量
    property: #缺省配置（用于开发环境）。其他环境需要在VM参数中指定，如下：
      #测试：-Dlog.level.console=warn -Dlog.level.xjj=trace
      #生产：-Dlog.level.console=warn -Dlog.level.xjj=info
      - name: log.level.console
        value: info
      - name: project.name
        value: spring-unity
      - name: log.path
        value: ./${project.name}/logs
      - name: log.pattern
        value: "%d | %-5p | %F:%L |- %m%n"
      - name: console.log.pattern
        # VM启动项加上"-Dlog4j.skipJansi=false"才能启动彩色
        value: "%highlight{%d | %-5p | %F:%L |- %m%n}"
  appenders:
    #输出到控制台
    Console:
      name: CONSOLE
      target: SYSTEM_OUT
      PatternLayout:
        Pattern: ${console.log.pattern}
    #滚动文件
    RollingFile:
      - name: ROLLING_FILE
        fileName: ${log.path}/${project.name}.log
        filePattern: "${log.path}/daily/$${date:yyyy-MM}/${project.name}-%d{yyyy-MM-dd}-%i.log"
        PatternLayout:
          Pattern: ${log.pattern}
        Filters:
          #一定要先去除不接受的日志级别，然后获取需要接受的日志级别
          ThresholdFilter:
            - level: error
              onMatch: DENY
              onMismatch: NEUTRAL #交给下一个filter处理
            - level: info
              onMatch: ACCEPT
              onMismatch: DENY
        Policies:
          SizeBasedTriggeringPolicy: #日志拆分规则
            size: "10MB"
          TimeBasedTriggeringPolicy: #按天分类
            modulate: true
            interval: 1
        DefaultRolloverStrategy: #文件最多100个
          max: 20
        #错误日志
      - name: ERROR_ROLLING_FILE
        ignoreExceptions: false
        fileName: ${log.path}/error/${project.name}_error.log
        filePattern: "${log.path}/error/$${date:yyyy-MM}/${project.name}-%d{yyyy-MM-dd}-%i.log"
        ThresholdFilter:
          level: error
          onMatch: ACCEPT
          onMismatch: DENY
        PatternLayout:
          Pattern: ${log.pattern}
        Policies:
          SizeBasedTriggeringPolicy: #日志拆分规则
            size: "10MB"
          TimeBasedTriggeringPolicy: #按天分类
            modulate: true
            interval: 1
        DefaultRolloverStrategy: #文件最多100个
          max: 100
      # 警告日志
      - name: WARN_ROLLING_FILE
        ignoreExceptions: false
        fileName: ${log.path}/warn/${project.name}_warn.log
        filePattern: "${log.path}/warn/$${date:yyyy-MM-dd}/${project.name}-%d{yyyy-MM-dd}-%i.log"
        ThresholdFilter:
          level: warn
          #onMatch="ACCEPT" 匹配该级别及以上
          #onMatch="DENY"  不匹配该级别及以上
          #onMismatch="ACCEPT"  表示匹配该级别以下的级别
          #onMismatch="DENY"  不表示匹配该级别以下的级别
          onMatch: ACCEPT
          onMismatch: DENY
        PatternLayout:
          pattern: ${log.pattern}
        Policies:
          SizeBasedTriggeringPolicy: # 日志拆分规则
            size: "10MB"
          TimeBasedTriggeringPolicy: # 按天分类
            modulate: true
            interval: 1
        DefaultRolloverStrategy: # 文件最多100个
          max: 20
      #用户行为日志
      - name: USER_ROLLING_FILE
        fileName: ${log.path}/user/user-${project.name}.log
        filePattern: "${log.path}/user/$${date:yyyy-MM-dd}/user-${project.name}-%d{yyyy-MM-dd}-%i.log"
        PatternLayout:
          pattern: ${log.pattern}
        Filters:
          #一定要先去除不接受的日志级别，然后获取需要接受的日志级别
          ThresholdFilter:
            - level: error
              onMatch: DENY
              onMismatch: NEUTRAL #交给下一个filter处理
            - level: info
              onMatch: ACCEPT
              onMismatch: DENY
        Policies:
          SizeBasedTriggeringPolicy: # 日志拆分规则
            size: "10MB"
          TimeBasedTriggeringPolicy: # 按天分类
            modulate: true
            interval: 1
        DefaultRolloverStrategy: # 文件最多100个
          max: 100
  Loggers:
    logger:
      - name: platform
        level: info
        additivity: false
        AppenderRef:
          - ref: CONSOLE
          - ref: ROLLING_FILE
      - name: error
        level: debug
        additivity: true #追加
        AppenderRef:
          - ref: ERROR_ROLLING_FILE
    Root:
      level: info
      AppenderRef:
        - ref: CONSOLE
        - ref: ROLLING_FILE
        - ref: ERROR_ROLLING_FILE
        - ref: WARN_ROLLING_FILE
        - ref: USER_ROLLING_FILE
  #    监听具体包下面的日志
  #    Logger: # 为com.xjj包配置特殊的Log级别，方便调试
  #      - name: com.xjj
  #        additivity: false
  #        level: ${sys:log.level.xjj}
  #        AppenderRef:
  #          - ref: CONSOLE
  #          - ref: ROLLING_FILE
