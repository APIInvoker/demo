<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springunity.mapper.UserInfoMapper">
    <resultMap id="BaseResultMap" type="com.example.springunity.pojo.UserInfoDO">
        <result property="id" column="id" jdbcType="BIGINT"/>
        <result property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="nickName" column="nick_name" jdbcType="VARCHAR"/>
        <result property="birthday" column="birthday" jdbcType="DATE"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="income" column="income" jdbcType="NUMERIC"/>
        <result property="deleted" column="is_deleted" jdbcType="SMALLINT"/>
        <result property="gmtCreate" column="gmt_create" jdbcType="TIMESTAMP"/>
        <result property="gmtModified" column="gmt_modified" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select id,
               user_id,
               nick_name,
               logo,
               birthday,
               sex,
               age,
               income,
               is_deleted,
               gmt_create,
               gmt_modified
        from dev_user_info
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByCondition" resultMap="BaseResultMap">
        select user_id, nick_name, birthday, sex, age, income from dev_user_info
        <where>
            <if test="nickName != null and nickName != ''">
                nick_name like concat('%', #{nickName}, '%')
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
            <if test="birthday != null">
                and birthday = #{birthday}
            </if>
            <if test="income != null">
                and income = #{income}
            </if>
            and is_deleted = 0
        </where>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from dev_user_info
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert">
        insert into dev_user_info
        ( id, user_id, nick_name
        , logo, birthday, sex
        , age, income, is_deleted
        , gmt_create, gmt_modified)
        values ( #{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{nickName,jdbcType=VARCHAR}
               , #{logo,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{sex,jdbcType=OTHER}
               , #{age,jdbcType=OTHER}, #{income,jdbcType=NUMERIC}, #{deleted,jdbcType=SMALLINT}
               , #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective">
        insert into dev_user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="userId != null">user_id,</if>
            <if test="nickName != null">nick_name,</if>
            <if test="logo != null">logo,</if>
            <if test="birthday != null">birthday,</if>
            <if test="sex != null">sex,</if>
            <if test="age != null">age,</if>
            <if test="income != null">income,</if>
            <if test="deleted != null">is_deleted,</if>
            <if test="gmtCreate != null">gmt_create,</if>
            <if test="gmtModified != null">gmt_modified,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=BIGINT},</if>
            <if test="userId != null">#{userId,jdbcType=BIGINT},</if>
            <if test="nickName != null">#{nickName,jdbcType=VARCHAR},</if>
            <if test="logo != null">#{logo,jdbcType=VARCHAR},</if>
            <if test="birthday != null">#{birthday,jdbcType=DATE},</if>
            <if test="sex != null">#{sex,jdbcType=OTHER},</if>
            <if test="age != null">#{age,jdbcType=OTHER},</if>
            <if test="income != null">#{income,jdbcType=NUMERIC},</if>
            <if test="deleted != null">#{deleted,jdbcType=SMALLINT},</if>
            <if test="gmtCreate != null">#{gmtCreate,jdbcType=TIMESTAMP},</if>
            <if test="gmtModified != null">#{gmtModified,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.springunity.pojo.UserInfoDO">
        update dev_user_info
        <set>
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="logo != null">
                logo = #{logo,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=OTHER},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=OTHER},
            </if>
            <if test="income != null">
                income = #{income,jdbcType=NUMERIC},
            </if>
            <if test="deleted != null">
                is_deleted = #{deleted,jdbcType=SMALLINT},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.springunity.pojo.UserInfoDO">
        update dev_user_info
        set id           = #{id,jdbcType=BIGINT},
            user_id      = #{userId,jdbcType=BIGINT},
            nick_name    = #{nickName,jdbcType=VARCHAR},
            logo         = #{logo,jdbcType=VARCHAR},
            birthday     = #{birthday,jdbcType=DATE},
            sex          = #{sex,jdbcType=OTHER},
            age          = #{age,jdbcType=OTHER},
            income       = #{income,jdbcType=NUMERIC},
            is_deleted   = #{deleted,jdbcType=SMALLINT},
            gmt_create   = #{gmtCreate,jdbcType=TIMESTAMP},
            gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>
